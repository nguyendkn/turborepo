version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: csmart-mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: csmart
    volumes:
      - mongodb_data:/data/db
      - ./deploy/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - csmart-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/csmart --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: csmart-mongo-express
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - csmart-network

  # Redis for caching and sessions
  redis:
    image: redis:7.2-alpine
    container_name: csmart-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass password
    volumes:
      - redis_data:/data
    networks:
      - csmart-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

  # API Service
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: development
    container_name: csmart-api
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=mongodb://admin:password@mongodb:27017/csmart?authSource=admin
      - REDIS_URL=redis://:password@redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long-dev
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-at-least-32-characters-long-dev
    volumes:
      - ./apps/api:/app
      - /app/node_modules
      - ./apps/api/uploads:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - csmart-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Web Frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: development
    container_name: csmart-web
    restart: unless-stopped
    ports:
      - '5173:5173'
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    depends_on:
      api:
        condition: service_healthy
    networks:
      - csmart-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5173']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  csmart-network:
    driver: bridge
